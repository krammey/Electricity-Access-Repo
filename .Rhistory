view(plotDF)
View(plotDF)
names(plotDF) = c('w','con1','con2','con3')
install.packages('lpSolveAPI')
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject")
library(shiny)
library(shinydashboard)
library(ggplot2)
library(ggmap)
library(maps)
library(magick)
# Load world map and fix virgin islands labels
worldmap <- map_data(map="world")
worldmap$region[worldmap$region == 'Virgin Islands'][1:23] <- "British Virgin Islands"
worldmap$region[worldmap$region == 'Virgin Islands'] <- "United States Virgin Islands"
# Get list of countries
countrylist <- unique(worldmap$region)
# Load access data
access_data <- read.csv('access_data.csv', header=TRUE, stringsAsFactors = F, na.strings="NA")
# Get rid of axes for plot
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_blank()
)
YearMapDataFxn = function(h,MaxPerc=100){
# Get access data for year h
access_df <- access_data[access_data$Year == as.numeric(h),]
access_df <- cbind.data.frame(access_df$country, as.numeric(access_df$Nat.Elec.Rate), stringsAsFactors=FALSE)
names(access_df) <- c("Country","Nat.Elec.Rate")
# Replace electrification rates over 80% with NA
access_df$Nat.Elec.Rate[access_df$Nat.Elec.Rate > MaxPerc] <- NA
# Merge access data with map.world by country
df <- merge(worldmap, access_df, by.x = "region", by.y = "Country", sort = F, all.x=T)
df2 <- df[order(df$order),]
# Append column to map data and rename
worldmap2 <- cbind.data.frame(worldmap, as.numeric(df2$Nat.Elec.Rate), stringsAsFactors=FALSE)
names(worldmap2)[names(worldmap2) == "as.numeric(df2$Nat.Elec.Rate)"] <- "access"
return(worldmap2)
}
h=1990
worldmap2 <- YearMapDataFxn(h,50)
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max50.jpg"), dpi = 144)
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject/Maps-max50")
for(h in 1990:2014){
worldmap2 <- YearMapDataFxn(h,50)
# Plot
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max50.jpg"), dpi = 144)
}
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject/Maps-max100")
for(h in 1990:2014){
worldmap2 <- YearMapDataFxn(h)
# Plot
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max100.jpg"), dpi = 144)
}
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject")
runApp()
h
access_df <- access_data[access_data$Year == as.numeric(h),]
access_df <- cbind.data.frame(access_df$country, as.numeric(access_df$Nat.Elec.Rate), stringsAsFactors=FALSE)
worldmap2 <- YearMapDataFxn(h)
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject/Maps-max100")
for(h in 1990:2014){
worldmap2 <- YearMapDataFxn(h)
# Plot
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max100.jpg"), dpi = 144)
}
for(h in 1990:2014){
worldmap2 <- YearMapDataFxn(h)
# Plot
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max100.jpg"), dpi = 72)
}
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject/Maps-max50")
for(h in 1990:2014){
worldmap2 <- YearMapDataFxn(h,50)
# Plot
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max100.jpg"), dpi = 72)
}
for(h in 1990:2014){
worldmap2 <- YearMapDataFxn(h,50)
# Plot
gg <- ggplot() +
ggtitle(as.character(h)) +
theme(plot.title = element_text(hjust = 0.5, size = 30)) +
# theme(plot.margin=unit(c(0,0,0,0),"mm")) +
geom_map(
data=worldmap2,
map=worldmap2,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
column <- paste0(h,"_Access")
ggsave(paste0(column,"-max50.jpg"), dpi = 72)
}
setwd("~/GoogleDrive/1UT/1Courses/1Spring18/DATA/Project/1GTFdata/ME397_Sp18_FinalProject")
runApp()
runApp()
runApp()
runApp()
runApp()
usa <- map_data("usa")
sl <- map_data("sierra leone")
sl <- map_data("sierra\ leone")
View(worldmap)
sl <- map_data("Aruba")
test <- map_data(map="world",regions="Aruba")
runApp(list(
ui = fluidPage(
tabsetPanel(id = "tabs",
tabPanel("Search",
fluidRow(
column(12,
inputPanel(
selectizeInput("s1", h4("Select State:")
, options = list(dropdownParent = 'body')
, choices = state.name),
tags$head(tags$style(".selectize-control.single { width: 400px; z-index: 1; }")),
dateInput("day", h4("Input Date:"), value = Sys.Date())
)
)
)
)
)),
server = function(input,output,session)
{
})
)
runApp(list(
ui = fluidPage(
tabsetPanel(id = "tabs",
tabPanel("Search",
fluidRow(
column(12,
inputPanel(
selectizeInput("s1", h4("Select State:")
, options = list(dropdownParent = 'body')
, choices = state.name),
tags$head(tags$style(".selectize-control.single { width: 400px; z-index: 1; }")),
dateInput("day", h4("Input Date:"), value = Sys.Date())
)
)
)
)
)),
server = function(input,output,session)
{
})
)
runApp()
c
c <- "Aruba"
countrymap <- map_data(map="world",regions = c)
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill="blue")
) +
#        scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
coord_equal() +
ditch_the_axes +
#        annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill="blue")
) +
#        scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
#        coord_equal() +
ditch_the_axes +
#        annotate("text",x=160, y=66.5,label = "\U00A9 K. Ramirez-Meyers",col="white", cex=2,alpha = 0.8)
gg
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill="blue")
) +
#        scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
#        coord_equal() +
ditch_the_axes
runApp()
View(countrymap)
c
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill="blue")
) +
#        scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
#        coord_equal() +
ditch_the_axes
gg
runApp()
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region)
) +
#        scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
#        coord_equal() +
ditch_the_axes
gg
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar") +
#        coord_equal() +
ditch_the_axes
gg
countrymap <- access_data[region == c]
View(access_data)
c
access_df <- access_data[access_data$country == c,]
View(access_df)
df <- merge(worldmap, access_df, by.x = "region", by.y = "Country", sort = F, all.x=F)
View(worldmap)
countrymap <- worldmap[worldmap$region == c,]
View(countrymap)
df <- merge(countrymap, access_df, by.x = "region", by.y = "Country")
df <- merge(countrymap, access_df, by.x = "region", by.y = "country")
df2 <- df[order(df$order),]
View(df2)
df <- merge(countrymap, access_df, by.x = "region", by.y = "country")
df2 <- df[order(df$year),]
df2 <- df[order(df$Year),]
access_df <- access_data[access_data$country == c,]
access_df <- access_data[access_data$country == c,]
access_df <- access_df[access_df$Year == h,]
countrymap <- worldmap[worldmap$region == c,]
df <- merge(countrymap, access_df, by.x = "region", by.y = "country")
df2 <- df[order(df$Year),]
runApp()
names(df2)[8:10,] <- c("National","Rural","Urban")
names(df2)[8:10] <- c("National","Rural","Urban")
CountryMapDataFxn = function(c,h){
# Get access data for year h, country c
access_df <- access_data[access_data$country == c,]
access_df <- access_df[access_df$Year == h,]
# access_df <- cbind.data.frame(access_df$country, as.numeric(access_df$Nat.Elec.Rate), stringsAsFactors=FALSE)
# names(access_df) <- c("Country","Nat.Elec.Rate")
# Replace electrification rates over 80% with NA
# access_df$Nat.Elec.Rate[access_df$Nat.Elec.Rate > MaxPerc] <- NA
# Merge access data with map.world by country
countrymap <- worldmap[worldmap$region == c,]
df <- merge(countrymap, access_df, by.x = "region", by.y = "country")
df2 <- df[order(df$Year),]
# Append column to map data and rename
# worldmap2 <- cbind.data.frame(worldmap, as.numeric(df2$Nat.Elec.Rate), stringsAsFactors=FALSE)
names(df2)[8:10] <- c("National","Rural","Urban")
return(df2)
}
h
c
countrymap <- CountryMapDataFxn(c,h)
View(countrymap)
Fill = "Rural"
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=Fill)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
Fill
Fill = Rural
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=as.factor(Fill))
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
as.factor(Fill)
Fill = Rural
Fill = "Rural"
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=as.factor(Fill))
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=National)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=Rural)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=as.factor("Rural"))
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
fillOptions = as.factor(c("National","Rural","Urban"))
fillOptions
fillOptions[1]
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=fillOptions[1])
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
fillOptions = as.character(c("National","Rural","Urban"))
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=fillOptions[1])
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
#        coord_equal() +
ditch_the_axes
gg
countrymap$access <- countrymap[names(countrymap) == "National"]
names(countrymap)[ncol(countrymap)] <- "access"
View(countrymap)
names(countrymap)[ncol(countrymap)]
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
coord_equal() +
ditch_the_axes
gg
runApp()
h
c
c="Afghanistan"
countrymap <- CountryMapDataFxn(c,h)
countrymap$access <- countrymap[names(countrymap) == "Rural"]
names(countrymap)[ncol(countrymap)] <- "access"
map <- CountryMapDataFxn(c,h)
map$access <- map[names(map) == "Rural"]
names(map)[ncol(map)] <- "access"
View(map)
gg = ggplot() +
geom_map(
data=countrymap,
map=countrymap,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
coord_equal() +
ditch_the_axes
gg
gg = ggplot() +
geom_map(
data=map,
map=map,
aes(x=long, y=lat, map_id=region, fill=access)
) +
scale_fill_gradient(low = "orange", high = "blue", guide = "colourbar", limits=c(0,100)) +
coord_equal() +
ditch_the_axes
gg
runApp()
runApp()
